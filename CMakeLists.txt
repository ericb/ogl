CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
 
PROJECT(3DTEST)

set(BIN_DIR ${3DTEST_SOURCE_DIR}/bin)
set(HEADER_DIR ${3DTEST_SOURCE_DIR}/src/header)
set(PROJECT_ROOT ${3DTEST_SOURCE_DIR})
set(HEADER_FILES 
    ${HEADER_DIR}/util.h 
)
set(CMAKE_CXX_FLAGS "-std=c++11")

if (${CMAKE_CXX_COMPILER_ID} STREQUAL "GNU" OR ${CMAKE_CXX_COMPILER_ID} STREQUAL "Clang")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -pedantic -std=c++11")
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS} -g")
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS} -O2")
elseif (${CMAKE_CXX_COMPILER_ID} STREQUAL "MSVC")
    if (CMAKE_CXX_FLAGS MATCHES "/W[0-4]")
        string(REGEX REPLACE "/W[0-4]" "/W4" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
    else()
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W4")
    endif()
endif()

configure_file (
    "${3DTEST_SOURCE_DIR}/src/header/config.h.in"
    "${3DTEST_SOURCE_DIR}/src/header/config.h"
)

INCLUDE(FindPkgConfig)

PKG_SEARCH_MODULE(GL REQUIRED gl)
PKG_SEARCH_MODULE(GLEW REQUIRED glew)
PKG_SEARCH_MODULE(SDL2 REQUIRED sdl2)
PKG_SEARCH_MODULE(SDL2IMAGE REQUIRED SDL2_image)

INCLUDE_DIRECTORIES(
    ${3DTEST_SOURCE_DIRS}
    ${GL_INCLUDE_DIRS}
    ${GLEW_INCLUDE_DIRS}
    ${SDL2_INCLUDE_DIRS}
    ${SDL2IMAGE_INCLUDE_DIRS}
    ${HEADER_DIR}
)

ADD_EXECUTABLE(3DTEST src/main.cpp ${HEADER_FILES})
TARGET_LINK_LIBRARIES(3DTEST ${GLEW_LIBRARIES} ${GL_LIBRARIES} ${SDL2_LIBRARIES} ${SDL2IMAGE_LIBRARIES})


install(TARGETS 3DTEST RUNTIME DESTINATION ${BIN_DIR})